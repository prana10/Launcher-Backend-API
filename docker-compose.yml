version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: launcher_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: launcher_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - launcher_network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: launcher_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - launcher_network

  # Uncomment jika ingin menggunakan Redis untuk caching
  # redis:
  #   image: redis:alpine
  #   container_name: launcher_redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - launcher_network

  # Development service untuk menjalankan aplikasi
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: launcher_api
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=launcher_db
      - SERVER_PORT=8080
      - SERVER_HOST=0.0.0.0
      - ENVIRONMENT=development
    ports:
      - "8080:8080"
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - launcher_network

networks:
  launcher_network:
    driver: bridge

volumes:
  postgres_data:
  # redis_data: 